plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.video'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// build 시 QClass 소스도 함께 build하기 위해 sourceSets에 위치 추가
def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}

// << 으로 명시해주지 않으면 Q 파일 내 Generated를 import할 때 자바 9에만 있는 javax.annotation.processing.Generated로 import 해줌
compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

// annotationProcessorGeneratedSourcesDirectory < 이것도 있는데 Gradle 공식 문서에서 deprecated 됨.
// generatedSourceOutputDirectory는 annotation processors에서 생성한 소스 파일을 저장할 디렉토리를 지정해줌
// 이 코드를 통해서 위에서 선언한 querydslSrcDir 변수에 할당된 값에다가 annotation processors가 만든 QClass를 저장해준다.
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// build시 생성 되었던 QClass > clean 시 모두 삭제
clean {
	delete file(querydslSrcDir)
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.8'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation "io.jsonwebtoken:jjwt:0.9.1"
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.modelmapper:modelmapper:2.4.2'

	//	QueryDSL - 내부 클래스 사용 가능, QClass는 생성 X
	implementation 'com.querydsl:querydsl-jpa'

	// QClass 생성 O
	implementation 'com.querydsl:querydsl-apt'

	// @Entity 어노테이션을 선언한 클래스 Q클래스로 생성해준다.
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"

	 // Q 클래스를 찾지 못 했을 때 발생하는 java.lang.NoClassDefFoundError를 방지하기 위함.
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

tasks.named('test') {
	useJUnitPlatform()
}